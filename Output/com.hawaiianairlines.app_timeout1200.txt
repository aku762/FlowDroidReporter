[main] WARN soot.jimple.infoflow.methodSummary.data.provider.LazySummaryProvider - Lazy loading summaries from a jar/zip file might throw a ClosedChannelException. Use the EagerSummaryProvider instead.
[main] INFO soot.jimple.infoflow.cmd.MainClass - Analyzing app C:\Users\Anthony\OneDrive - University of Luxembourg\Courses\Static & Dynamic Analysis\Project\apks\com.hawaiianairlines.app.apk (1 of 1)...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Initializing Soot...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Loading dex files...
[main] WARN soot.dexpler.DexFileProvider - Multiple dex files detected, only processing 'classes.dex'. Use '-process-multiple-dex' option to process them all.
[main] INFO soot.jimple.infoflow.android.SetupApplication - ARSC file parsing took 0.0999497 seconds
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 4,915.35 MiB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 81 components...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.epg.EPGGridLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomViewPager is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template1.FeaturedTemplateRecyclerView1 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template2.FeaturedTemplateRecyclerView2 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.entertainment.detail.BundleChildrenLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.GridRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RearrangeRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Collecting callbacks in DEFAULT mode...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Callback analysis done.
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.epg.EPGGridLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomViewPager is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template1.FeaturedTemplateRecyclerView1 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template2.FeaturedTemplateRecyclerView2 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.entertainment.detail.BundleChildrenLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.GridRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RearrangeRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 81 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class androidx.fragment.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.player.livetv.LiveTVMediaPlayerSkin$SystemUICallback, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.userdata.UserDataStore, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.model.media.dao.MediaDao, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot generate constructor for phantom class com.fasterxml.jackson.databind.ObjectMapper
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.model.network.NetworkDao, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.epg.EPGGridLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomViewPager is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template1.FeaturedTemplateRecyclerView1 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template2.FeaturedTemplateRecyclerView2 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.entertainment.detail.BundleChildrenLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.GridRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RearrangeRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 38 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 81 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class androidx.fragment.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.player.livetv.LiveTVMediaPlayerSkin$SystemUICallback, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.userdata.UserDataStore, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.model.media.dao.MediaDao, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot generate constructor for phantom class com.fasterxml.jackson.databind.ObjectMapper
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.model.network.NetworkDao, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.appinfo.ParentalControlsActivity$OnDialogClickListener, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.epg.EPGGridLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomViewPager is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template1.FeaturedTemplateRecyclerView1 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template2.FeaturedTemplateRecyclerView2 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.entertainment.detail.BundleChildrenLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.GridRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RearrangeRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 31 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 81 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class androidx.fragment.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.player.livetv.LiveTVMediaPlayerSkin$SystemUICallback, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.userdata.UserDataStore, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.model.media.dao.MediaDao, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot generate constructor for phantom class com.fasterxml.jackson.databind.ObjectMapper
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.model.network.NetworkDao, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.appinfo.ParentalControlsActivity$OnDialogClickListener, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.epg.EPGGridLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomViewPager is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template1.FeaturedTemplateRecyclerView1 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template2.FeaturedTemplateRecyclerView2 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.entertainment.detail.BundleChildrenLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.GridRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RearrangeRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 30 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 81 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class androidx.fragment.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.player.livetv.LiveTVMediaPlayerSkin$SystemUICallback, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.userdata.UserDataStore, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.model.media.dao.MediaDao, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot generate constructor for phantom class com.fasterxml.jackson.databind.ObjectMapper
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.model.network.NetworkDao, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.appinfo.ParentalControlsActivity$OnDialogClickListener, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.epg.EPGGridLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomViewPager is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template1.FeaturedTemplateRecyclerView1 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template2.FeaturedTemplateRecyclerView2 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.entertainment.detail.BundleChildrenLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.GridRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RearrangeRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 30 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.android.entryPointCreators.AndroidEntryPointCreator - Creating Android entry point for 81 components...
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.FragmentEntryPointCreator - Cannot generate constructor for phantom class androidx.fragment.app.Fragment
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.player.livetv.LiveTVMediaPlayerSkin$SystemUICallback, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.userdata.UserDataStore, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.model.media.dao.MediaDao, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot generate constructor for phantom class com.fasterxml.jackson.databind.ObjectMapper
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.model.network.NetworkDao, because it is an interface and cannot substitute with subclass
[main] WARN soot.jimple.infoflow.android.entryPointCreators.components.ActivityEntryPointCreator - Cannot create valid constructor for aero.panasonic.companion.view.appinfo.ParentalControlsActivity$OnDialogClickListener, because it is an interface and cannot substitute with subclass
[main] INFO soot.jimple.infoflow.android.SetupApplication - Constructing the callgraph...
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.epg.EPGGridLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomViewPager is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template1.FeaturedTemplateRecyclerView1 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.featured.template2.FeaturedTemplateRecyclerView2 is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RestorePositionRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.entertainment.detail.BundleChildrenLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.GridRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.RearrangeRecyclerView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.CustomFab is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.ScrollingMediaLayout is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] WARN soot.jimple.infoflow.android.resources.LayoutFileParser - Layout class aero.panasonic.companion.view.widget.TruncationTextView is not derived from android.view.View
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Running incremental callback analysis for 30 components...
[main] INFO soot.jimple.infoflow.android.callbacks.DefaultCallbackAnalyzer - Incremental callback analysis done.
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication - Callback analysis terminated normally
[main] INFO soot.jimple.infoflow.android.SetupApplication - Entry point calculation done.
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.springframework.security.config.http.CsrfBeanDefinitionParser: org.springframework.beans.factory.config.BeanDefinition getCsrfLogoutHandler)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.springframework.security.config.http.FormLoginBeanDefinitionParser: java.lang.String getLoginPage)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <com.google.auth.oauth2.UserCredentials: java.lang.String getClientSecret)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.springframework.web.servlet.tags.UrlTag: java.lang.String createUrl)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.apache.xmlrpc.webserver.RequestData: java.lang.String getMethod)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.dmfs.oauth2.client.http.requests.ResourceOwnerPasswordTokenRequest: org.dmfs.httpclient.HttpRequestEntity requestEntity)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.springframework.security.concurrent.DelegatingSecurityContextExecutorService: java.util.concurrent.ExecutorService getDelegate)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.springframework.security.config.annotation.web.builders.HttpSecurity: org.springframework.security.config.'annotation'.web.configurers.HeadersConfigurer headers)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.springframework.web.servlet.tags.EscapeBodyTag: java.lang.String readBodyContent)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.springframework.security.config.http.FormLoginBeanDefinitionParser: java.lang.String getLoginProcessingUrl)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.springframework.security.config.annotation.web.configurers.LogoutConfigurer: java.util.List getLogoutHandlers)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.apache.xmlrpc.webserver.RequestData: java.lang.String getHttpVersion)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match: <org.apache.xmlrpc.webserver.HttpServletRequestImpl: void parseParameters)> -> _SOURCE_
[main] WARN soot.jimple.infoflow.android.data.parsers.PermissionMethodParser - Line does not match:     
[main] INFO soot.jimple.infoflow.android.source.AccessPathBasedSourceSinkManager - Created a SourceSinkManager with 71 sources, 193 sinks, and 166 callback methods.
[main] INFO soot.jimple.infoflow.android.SetupApplication - Collecting callbacks and building a callgraph took 21 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication - Running data flow analysis on C:\Users\Anthony\OneDrive - University of Luxembourg\Courses\Static & Dynamic Analysis\Project\apks\com.hawaiianairlines.app.apk with 71 sources and 193 sinks...
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Implicit flow tracking is NOT enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Exceptional flow tracking is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Running with a maximum access path length of 5
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using path-agnostic result collection
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Recursive access path shortening is enabled
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Taint analysis enabled: true
[main] INFO soot.jimple.infoflow.InfoflowConfiguration - Using alias algorithm FlowSensitive
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Registered a memory warning system for 4,915.35 MiB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph construction took 0 seconds
[main] INFO soot.jimple.infoflow.codeOptimization.InterproceduralConstantValuePropagator - Removing side-effect free methods is disabled
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Dead code elimination took 0.3919985 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Callgraph has 12173 edges
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Starting Taint Analysis
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Using context- and flow-sensitive solver
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] WARN soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Running with limited join point abstractions can break context-sensitive path builders
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Looking for sources and sinks...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Source lookup done, found 3 sources and 63 sinks.
[Low memory monitor] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Triggering memory warning at 5408 MB (5726 MB max, 5235 in watched memory pool)...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper hits: 332823
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Taint wrapper misses: 17366392
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - IFDS problem with 14106313 forward and 15068044 backward edges solved in 81 seconds, processing 108 results...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Current memory consumption: 5431 MB
[Low memory monitor] WARN soot.jimple.infoflow.memory.FlowDroidMemoryWatcher - Running out of memory, solvers terminated
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after cleanup: 2461 MB
[main] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher started
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 1 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[main] ERROR soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Could not wait for executor termination
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1326)
	at heros.solver.CountLatch.awaitZero(CountLatch.java:79)
	at heros.solver.CountingThreadPoolExecutor.awaitCompletion(CountingThreadPoolExecutor.java:86)
	at soot.jimple.infoflow.solver.executors.InterruptableExecutor.awaitCompletion(InterruptableExecutor.java:88)
	at soot.jimple.infoflow.data.pathBuilders.ContextSensitivePathBuilder.computeTaintPaths(ContextSensitivePathBuilder.java:270)
	at soot.jimple.infoflow.data.pathBuilders.BatchPathBuilder.computeTaintPaths(BatchPathBuilder.java:47)
	at soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder.computeTaintPaths(DefaultPathBuilderFactory.java:56)
	at soot.jimple.infoflow.AbstractInfoflow.runTaintAnalysis(AbstractInfoflow.java:1107)
	at soot.jimple.infoflow.AbstractInfoflow.runAnalysis(AbstractInfoflow.java:634)
	at soot.jimple.infoflow.AbstractInfoflow.runAnalysis(AbstractInfoflow.java:567)
	at soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow.runAnalysis(SetupApplication.java:1320)
	at soot.jimple.infoflow.android.SetupApplication.processEntryPoint(SetupApplication.java:1609)
	at soot.jimple.infoflow.android.SetupApplication.runInfoflow(SetupApplication.java:1544)
	at soot.jimple.infoflow.android.SetupApplication.runInfoflow(SetupApplication.java:1491)
	at soot.jimple.infoflow.cmd.MainClass.run(MainClass.java:358)
	at soot.jimple.infoflow.cmd.MainClass.main(MainClass.java:256)
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 2 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - Timeout reached, stopping the solvers...
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Path reconstruction terminated due to low memory
[main] ERROR soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Could not wait for executor termination
java.lang.InterruptedException
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:1039)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1328)
	at heros.solver.CountLatch.awaitZero(CountLatch.java:79)
	at heros.solver.CountingThreadPoolExecutor.awaitCompletion(CountingThreadPoolExecutor.java:86)
	at soot.jimple.infoflow.solver.executors.InterruptableExecutor.awaitCompletion(InterruptableExecutor.java:88)
	at soot.jimple.infoflow.data.pathBuilders.ContextSensitivePathBuilder.computeTaintPaths(ContextSensitivePathBuilder.java:270)
	at soot.jimple.infoflow.data.pathBuilders.BatchPathBuilder.computeTaintPaths(BatchPathBuilder.java:47)
	at soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder.computeTaintPaths(DefaultPathBuilderFactory.java:56)
	at soot.jimple.infoflow.AbstractInfoflow.runTaintAnalysis(AbstractInfoflow.java:1107)
	at soot.jimple.infoflow.AbstractInfoflow.runAnalysis(AbstractInfoflow.java:634)
	at soot.jimple.infoflow.AbstractInfoflow.runAnalysis(AbstractInfoflow.java:567)
	at soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow.runAnalysis(SetupApplication.java:1320)
	at soot.jimple.infoflow.android.SetupApplication.processEntryPoint(SetupApplication.java:1609)
	at soot.jimple.infoflow.android.SetupApplication.runInfoflow(SetupApplication.java:1544)
	at soot.jimple.infoflow.android.SetupApplication.runInfoflow(SetupApplication.java:1491)
	at soot.jimple.infoflow.cmd.MainClass.run(MainClass.java:358)
	at soot.jimple.infoflow.cmd.MainClass.main(MainClass.java:256)
[FlowDroid Timeout Watcher] WARN soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Path reconstruction terminated due to low memory
[FlowDroid Timeout Watcher] INFO soot.jimple.infoflow.memory.FlowDroidTimeoutWatcher - FlowDroid timeout watcher terminated
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 3 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 4 with 5 elements
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 5 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 6 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 7 with 5 elements
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 8 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 9 with 5 elements
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 10 with 5 elements
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 11 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 12 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 13 with 5 elements
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 14 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 15 with 5 elements
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 16 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 17 with 5 elements
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 18 with 5 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 19 with 5 elements
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 20 with 5 elements
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 21 with 5 elements
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 5 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 4...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 5...
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[Path reconstruction] WARN soot.jimple.infoflow.solver.executors.InterruptableExecutor - Executor has terminated. Call reset() before submitting new tasks.
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$ShutdownBatchPathBuilder - Running path reconstruction batch 22 with 3 elements
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Obtainted 3 connections between sources and sinks
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 1...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 2...
[main] INFO soot.jimple.infoflow.data.pathBuilders.DefaultPathBuilderFactory$RepeatableContextSensitivePathBuilder - Building path 3...
[main] INFO soot.jimple.infoflow.memory.MemoryWarningSystem - Shutting down the memory warning system...
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Memory consumption after path building: 4962 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Path reconstruction took 2917 seconds
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("extra:controls_showing", $z0) on line 98 in method <aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r55.<aero.panasonic.companion.view.player.MediaPlayerActivity$14: void <init>(aero.panasonic.companion.view.player.MediaPlayerActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerActivity$14: void <init>(aero.panasonic.companion.view.player.MediaPlayerActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.player.MediaPlayerActivity$14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r52.<aero.panasonic.companion.view.player.MediaPlayerSkin1: void <init>(android.content.Context,android.os.Handler,aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler,aero.panasonic.companion.view.entertainment.AudioSelectorDelegate)>($r0, null, null, $r51)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerSkin1: void <init>(android.content.Context,android.os.Handler,aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler,aero.panasonic.companion.view.entertainment.AudioSelectorDelegate)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = staticinvoke <aero.panasonic.companion.util.VectorDrawableUtils: android.graphics.drawable.Drawable createVectorDrawableWithTintSelector(android.content.Context,int,int)>($r1, $i1, $i0) in line 116
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.util.VectorDrawableUtils: android.graphics.drawable.Drawable createVectorDrawableWithTintSelector(android.content.Context,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: android.content.Context
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerSkin1: void <init>(android.content.Context,android.os.Handler,aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler,aero.panasonic.companion.view.entertainment.AudioSelectorDelegate)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.player.MediaPlayerSkin1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r51.<aero.panasonic.companion.view.entertainment.AudioSelectorDelegate: void <init>(android.app.Activity,aero.panasonic.companion.connectivity.PairingManager)>($r0, $r50)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.entertainment.AudioSelectorDelegate: void <init>(android.app.Activity,aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.entertainment.AudioSelectorDelegate
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r50.<aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>($r0, null, null, $r39, $r41, null, $r42, $r45, $r46, $r48, $r49, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: android.content.Context val$context> = $r2 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>($r1, $r14, $r6) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0 in line 81
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<aero.panasonic.inflight.services.IInFlightCallback: void onInitServiceComplete(java.lang.Object,java.lang.String)>($r5, $r4) in line 83
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1$1: aero.panasonic.companion.connectivity.PairingManager$1 this$1> = $r1 in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>($r8) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>($r1) in line 298
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener onSeatMediaRemoteControlCommandSendSuccess> = $r1 in line 265
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError getTimeLastUpdated> in line 297
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 298
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager$1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.inflight.services.InFlight
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: android.content.Context
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: android.content.Context val$context> = $r2 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.player.MediaPlayerActivity: void onSaveInstanceState(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerActivity: void onSaveInstanceState(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<aero.panasonic.companion.view.player.MediaPlayerActivity: aero.panasonic.companion.view.player.MediaPlayerPresenter controlsPresenter> in line 593
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerActivity: void onSaveInstanceState(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r3.<aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()>() in line 593
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = r0.<aero.panasonic.companion.view.player.MediaPlayerPresenter: boolean isControlsShowing> in line 98
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("extra:controls_showing", $z0) in line 98
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("extra:player_seeking", $z0) on line 100 in method <aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r55.<aero.panasonic.companion.view.player.MediaPlayerActivity$14: void <init>(aero.panasonic.companion.view.player.MediaPlayerActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerActivity$14: void <init>(aero.panasonic.companion.view.player.MediaPlayerActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.player.MediaPlayerActivity$14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r52.<aero.panasonic.companion.view.player.MediaPlayerSkin1: void <init>(android.content.Context,android.os.Handler,aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler,aero.panasonic.companion.view.entertainment.AudioSelectorDelegate)>($r0, null, null, $r51)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerSkin1: void <init>(android.content.Context,android.os.Handler,aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler,aero.panasonic.companion.view.entertainment.AudioSelectorDelegate)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = staticinvoke <aero.panasonic.companion.util.VectorDrawableUtils: android.graphics.drawable.Drawable createVectorDrawableWithTintSelector(android.content.Context,int,int)>($r1, $i1, $i0) in line 116
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.util.VectorDrawableUtils: android.graphics.drawable.Drawable createVectorDrawableWithTintSelector(android.content.Context,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: android.content.Context
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerSkin1: void <init>(android.content.Context,android.os.Handler,aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler,aero.panasonic.companion.view.entertainment.AudioSelectorDelegate)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.player.MediaPlayerSkin1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r51.<aero.panasonic.companion.view.entertainment.AudioSelectorDelegate: void <init>(android.app.Activity,aero.panasonic.companion.connectivity.PairingManager)>($r0, $r50)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.entertainment.AudioSelectorDelegate: void <init>(android.app.Activity,aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.entertainment.AudioSelectorDelegate
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r50.<aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>($r0, null, null, $r39, $r41, null, $r42, $r45, $r46, $r48, $r49, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: android.content.Context val$context> = $r2 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>($r1, $r14, $r6) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0 in line 81
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<aero.panasonic.inflight.services.IInFlightCallback: void onInitServiceComplete(java.lang.Object,java.lang.String)>($r5, $r4) in line 83
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1$1: aero.panasonic.companion.connectivity.PairingManager$1 this$1> = $r1 in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>($r8) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>($r1) in line 298
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener onSeatMediaRemoteControlCommandSendSuccess> = $r1 in line 265
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError getTimeLastUpdated> in line 297
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 298
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager$1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.inflight.services.InFlight
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: android.content.Context
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: android.content.Context val$context> = $r2 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.player.MediaPlayerActivity: void onSaveInstanceState(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerActivity: void onSaveInstanceState(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<aero.panasonic.companion.view.player.MediaPlayerActivity: aero.panasonic.companion.view.player.MediaPlayerPresenter controlsPresenter> in line 593
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerActivity: void onSaveInstanceState(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r3.<aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()>() in line 593
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = r0.<aero.panasonic.companion.view.player.MediaPlayerPresenter: boolean isPlayerSeeking> in line 100
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("extra:player_seeking", $z0) in line 100
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.WebActivity dummyMainMethod_aero_panasonic_companion_view_WebActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.WebActivity dummyMainMethod_aero_panasonic_companion_view_WebActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.WebActivity dummyMainMethod_aero_panasonic_companion_view_WebActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.WebActivity dummyMainMethod_aero_panasonic_companion_view_WebActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.WebActivity dummyMainMethod_aero_panasonic_companion_view_WebActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.WebActivity dummyMainMethod_aero_panasonic_companion_view_WebActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.WebActivity dummyMainMethod_aero_panasonic_companion_view_WebActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.WebActivity dummyMainMethod_aero_panasonic_companion_view_WebActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.WebActivity dummyMainMethod_aero_panasonic_companion_view_WebActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.WebActivity dummyMainMethod_aero_panasonic_companion_view_WebActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.NoticeActivity dummyMainMethod_aero_panasonic_companion_view_NoticeActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.NoticeActivity dummyMainMethod_aero_panasonic_companion_view_NoticeActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.NoticeActivity dummyMainMethod_aero_panasonic_companion_view_NoticeActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.NoticeActivity dummyMainMethod_aero_panasonic_companion_view_NoticeActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.NoticeActivity dummyMainMethod_aero_panasonic_companion_view_NoticeActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.NoticeActivity dummyMainMethod_aero_panasonic_companion_view_NoticeActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.NoticeActivity dummyMainMethod_aero_panasonic_companion_view_NoticeActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.NoticeActivity dummyMainMethod_aero_panasonic_companion_view_NoticeActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.NoticeActivity dummyMainMethod_aero_panasonic_companion_view_NoticeActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.NoticeActivity dummyMainMethod_aero_panasonic_companion_view_NoticeActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r2.<aero.panasonic.companion.view.search.SearchActivity$onCreateInternal$1: void <init>(aero.panasonic.companion.view.search.SearchActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.search.SearchActivity$onCreateInternal$1: void <init>(aero.panasonic.companion.view.search.SearchActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.search.SearchActivity dummyMainMethod_aero_panasonic_companion_view_search_SearchActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingBagActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingBagActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingBagActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingBagActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingBagActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingBagActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingBagActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingBagActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingBagActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingBagActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingBagActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingBagActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingBagActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingBagActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingBagActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingBagActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingBagActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingBagActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingBagActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingBagActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.entertainment.MediaActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_MediaActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.MediaActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_MediaActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.MediaActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_MediaActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.MediaActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_MediaActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.MediaActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_MediaActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.MediaActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_MediaActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.MediaActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_MediaActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.MediaActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_MediaActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.MediaActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_MediaActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.MediaActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_MediaActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<android.app.Activity: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r2, $r4, 0) on line 61 in method <aero.panasonic.companion.view.music.ServiceBindingDelegate: void onStart()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreateInternal(android.os.Bundle)>($r1) in line 37
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.appinfo.ClassificationActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>($r12) in line 42
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>(r0) in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>($r0) in line 10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.music.ServiceBindingDelegate: android.app.Activity activity> = $r1 in line 24
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 24
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1 in line 10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1[$i0] = $r3 in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>($r1) in line 60
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.delegate.CompositeDelegate: aero.panasonic.companion.view.delegate.ActivityDelegate[] delegates> = $r1 in line 14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.BaseActivity: aero.panasonic.companion.view.delegate.ActivityDelegate delegate> = $r4 in line 60
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 61
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.appinfo.ClassificationActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 42
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStartInternal()>() in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void onStartInternal()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStartInternal()>() in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStartInternal()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void onStartInternal()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<aero.panasonic.companion.view.BaseActivity: aero.panasonic.companion.view.delegate.ActivityDelegate delegate> in line 122
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void onStartInternal()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r3.<aero.panasonic.companion.view.delegate.ActivityDelegate: void onStart()>() in line 122
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<aero.panasonic.companion.view.delegate.CompositeDelegate: aero.panasonic.companion.view.delegate.ActivityDelegate[] delegates> in line 55
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = $r1[$i1] in line 55
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r2.<aero.panasonic.companion.view.delegate.ActivityDelegate: void onStart()>() in line 56
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegate: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 = r0.<aero.panasonic.companion.view.music.ServiceBindingDelegate: android.app.Activity activity> in line 61
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegate: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<android.app.Activity: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>($r2, $r4, 0) in line 61
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.entertainment.livetv.EpgActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_livetv_EpgActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.livetv.EpgActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_livetv_EpgActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r0, $r1) on line 222 in method <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r13.<aero.panasonic.companion.userdata.PersistentEntityManager: void <init>(com.fasterxml.jackson.databind.ObjectMapper,android.content.Context)>(null, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.userdata.PersistentEntityManager: void <init>(com.fasterxml.jackson.databind.ObjectMapper,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 21
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<aero.panasonic.companion.model.system.ParentalControlsManager: void <init>(android.content.Context)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.model.system.ParentalControlsManager: void <init>(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r16.<aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>($r0, null, null, $r5, $r7, null, $r8, $r11, $r12, $r14, $r15, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager: android.content.Context context> = $r1 in line 116
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> = $r1 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>($r1, $r14, $r6) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0 in line 81
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<aero.panasonic.inflight.services.IInFlightCallback: void onInitServiceComplete(java.lang.Object,java.lang.String)>($r5, $r4) in line 83
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager$1$2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1$2: aero.panasonic.companion.connectivity.PairingManager$1 this$1> = $r1 in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>($r9) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>($r1) in line 104
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener onSeatMediaRemoteControlCommandSendError> = $r1 in line 226
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError getTimeLastUpdated> in line 103
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: aero.panasonic.companion.connectivity.PairingManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>($r9) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 104
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>($r5) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: java.lang.String TAG> in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void e(java.lang.String,java.lang.String)>($r3, "SeatPairingV1 object is not set or null.") in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void e(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(6, $r0, $r1) in line 106
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>($i0, $r0, $r1) in line 192
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r0, $r1) in line 222
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0) on line 200 in method <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0) in line 200
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String concat(java.lang.String)>($r11) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>($r2, $r4) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(2, $r0, $r1) in line 54
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>($i0, $r0, $r1) in line 192
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r0, $r1) in line 222
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.KidsZoneActivity dummyMainMethod_aero_panasonic_companion_view_KidsZoneActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.KidsZoneActivity dummyMainMethod_aero_panasonic_companion_view_KidsZoneActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.maps.MapsActivity dummyMainMethod_aero_panasonic_companion_view_maps_MapsActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.maps.MapsActivity dummyMainMethod_aero_panasonic_companion_view_maps_MapsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.maps.MapsActivity dummyMainMethod_aero_panasonic_companion_view_maps_MapsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.maps.MapsActivity dummyMainMethod_aero_panasonic_companion_view_maps_MapsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.maps.MapsActivity dummyMainMethod_aero_panasonic_companion_view_maps_MapsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.maps.MapsActivity dummyMainMethod_aero_panasonic_companion_view_maps_MapsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.maps.MapsActivity dummyMainMethod_aero_panasonic_companion_view_maps_MapsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.maps.MapsActivity dummyMainMethod_aero_panasonic_companion_view_maps_MapsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.maps.MapsActivity dummyMainMethod_aero_panasonic_companion_view_maps_MapsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.maps.MapsActivity dummyMainMethod_aero_panasonic_companion_view_maps_MapsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreateInternal(android.os.Bundle)>($r1) in line 37
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r20.<aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$SeatRemoteControlListener: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity)>(r0) in line 65
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$SeatRemoteControlListener: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$SeatRemoteControlListener
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>($r12) in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>(r0) in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>($r0) in line 10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.music.ServiceBindingDelegate: android.app.Activity activity> = $r1 in line 24
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 24
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1 in line 10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1[$i0] = $r3 in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>($r1) in line 60
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.delegate.CompositeDelegate: aero.panasonic.companion.view.delegate.ActivityDelegate[] delegates> = $r1 in line 14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.BaseActivity: aero.panasonic.companion.view.delegate.ActivityDelegate delegate> = $r4 in line 60
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 61
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r20.<aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$SeatRemoteControlListener: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity)>(r0) in line 65
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$SeatRemoteControlListener: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 66
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r5.<aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$displayDPadItem$1: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$displayDPadItem$1: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$brightnessPlusListener$1: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$brightnessPlusListener$1: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r7.<aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$displayTouchPadItem$1: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity$displayTouchPadItem$1: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlSettingsActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlSettingsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, $r1) on line 225 in method <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r13.<aero.panasonic.companion.userdata.PersistentEntityManager: void <init>(com.fasterxml.jackson.databind.ObjectMapper,android.content.Context)>(null, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.userdata.PersistentEntityManager: void <init>(com.fasterxml.jackson.databind.ObjectMapper,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 21
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<aero.panasonic.companion.model.system.ParentalControlsManager: void <init>(android.content.Context)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.model.system.ParentalControlsManager: void <init>(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r16.<aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>($r0, null, null, $r5, $r7, null, $r8, $r11, $r12, $r14, $r15, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager: android.content.Context context> = $r1 in line 116
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> = $r1 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>($r1, $r14, $r6) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0 in line 81
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<aero.panasonic.inflight.services.IInFlightCallback: void onInitServiceComplete(java.lang.Object,java.lang.String)>($r5, $r4) in line 83
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<aero.panasonic.companion.connectivity.PairingManager$1$4: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 196
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$4: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 196
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager$1$3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager$1$2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>($r9) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 104
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: aero.panasonic.companion.connectivity.PairingManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>($r5) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: java.lang.String TAG> in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void e(java.lang.String,java.lang.String)>($r3, "SeatPairingV1 object is not set or null.") in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void e(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(6, $r0, $r1) in line 106
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>($i0, $r0, $r3) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, $r1) in line 225
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0) on line 200 in method <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0) in line 200
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String concat(java.lang.String)>($r11) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>($r2, $r4) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(2, $r0, $r1) in line 54
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>($i0, $r0, $r1) in line 192
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r0, $r1) in line 225
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r5.<aero.panasonic.companion.view.appinfo.ParentalControlsActivity$1: void <init>(aero.panasonic.companion.view.appinfo.ParentalControlsActivity,int)>($r0, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.appinfo.ParentalControlsActivity$1: void <init>(aero.panasonic.companion.view.appinfo.ParentalControlsActivity,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 126
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.appinfo.ParentalControlsActivity$5: void <init>(aero.panasonic.companion.view.appinfo.ParentalControlsActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.appinfo.ParentalControlsActivity$5: void <init>(aero.panasonic.companion.view.appinfo.ParentalControlsActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 178
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r7.<aero.panasonic.companion.view.appinfo.ParentalControlsActivity$4: void <init>(aero.panasonic.companion.view.appinfo.ParentalControlsActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.appinfo.ParentalControlsActivity$4: void <init>(aero.panasonic.companion.view.appinfo.ParentalControlsActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 169
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<aero.panasonic.companion.view.appinfo.ParentalControlsActivity$10: void <init>(java.lang.StringBuilder,android.content.Context,android.app.Dialog)>(null, $r0, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.appinfo.ParentalControlsActivity$10: void <init>(java.lang.StringBuilder,android.content.Context,android.app.Dialog)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 412
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r12.<aero.panasonic.companion.view.appinfo.ParentalControlsActivity$9: void <init>(java.lang.StringBuilder,int,android.content.Context,android.app.Dialog,aero.panasonic.companion.view.appinfo.ParentalControlsActivity$OnDialogClickListener,android.view.View,java.lang.String,android.widget.TextView)>(null, 0, $r0, null, null, $r1, "", null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.appinfo.ParentalControlsActivity$9: void <init>(java.lang.StringBuilder,int,android.content.Context,android.app.Dialog,aero.panasonic.companion.view.appinfo.ParentalControlsActivity$OnDialogClickListener,android.view.View,java.lang.String,android.widget.TextView)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 365
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ParentalControlsActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ParentalControlsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.news.ArticleViewActivity dummyMainMethod_aero_panasonic_companion_view_news_ArticleViewActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.ArticleViewActivity dummyMainMethod_aero_panasonic_companion_view_news_ArticleViewActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.ArticleViewActivity dummyMainMethod_aero_panasonic_companion_view_news_ArticleViewActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.ArticleViewActivity dummyMainMethod_aero_panasonic_companion_view_news_ArticleViewActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.ArticleViewActivity dummyMainMethod_aero_panasonic_companion_view_news_ArticleViewActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.ArticleViewActivity dummyMainMethod_aero_panasonic_companion_view_news_ArticleViewActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.ArticleViewActivity dummyMainMethod_aero_panasonic_companion_view_news_ArticleViewActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.ArticleViewActivity dummyMainMethod_aero_panasonic_companion_view_news_ArticleViewActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.ArticleViewActivity dummyMainMethod_aero_panasonic_companion_view_news_ArticleViewActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.ArticleViewActivity dummyMainMethod_aero_panasonic_companion_view_news_ArticleViewActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r5.<aero.panasonic.companion.view.widget.AspectRatioFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r0, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.widget.AspectRatioFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<aero.panasonic.companion.view.widget.AspectRatioFrameLayout: void init(android.content.Context,android.util.AttributeSet)>($r1, $r2) in line 30
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.widget.AspectRatioFrameLayout: void init(android.content.Context,android.util.AttributeSet)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r8 in line 46
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.widget.AspectRatioFrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 30
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.widget.MaxSizeLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r0, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.widget.MaxSizeLinearLayout: void <init>(android.content.Context,android.util.AttributeSet)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 19
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<aero.panasonic.companion.view.widget.ExpandedTextViewLayout: void <init>(android.content.Context,android.util.AttributeSet)>($r0, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.widget.ExpandedTextViewLayout: void <init>(android.content.Context,android.util.AttributeSet)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<aero.panasonic.companion.view.widget.RemoteImageView: void <init>(android.content.Context,android.util.AttributeSet)>($r0, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.widget.RemoteImageView: void <init>(android.content.Context,android.util.AttributeSet)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 53
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r12.<aero.panasonic.companion.view.widget.ObservableScrollView: void <init>(android.content.Context,android.util.AttributeSet)>($r0, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.widget.ObservableScrollView: void <init>(android.content.Context,android.util.AttributeSet)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 12
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.MediaDetailActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_MediaDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.ClassificationActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_ClassificationActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreateInternal(android.os.Bundle)>($r1) in line 37
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r25.<aero.panasonic.companion.view.remotecontrol.RemoteControlActivity$SeatRemoteControlListener: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlActivity)>(r0) in line 82
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlActivity$SeatRemoteControlListener: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity$SeatRemoteControlListener
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r24.<aero.panasonic.companion.view.remotecontrol.RemoteControlActivity$TouchPadClass: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlActivity)>(r0) in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlActivity$TouchPadClass: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity$TouchPadClass
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>($r12) in line 75
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>(r0) in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>($r0) in line 10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.music.ServiceBindingDelegate: android.app.Activity activity> = $r1 in line 24
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 24
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1 in line 10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1[$i0] = $r3 in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>($r1) in line 60
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.delegate.CompositeDelegate: aero.panasonic.companion.view.delegate.ActivityDelegate[] delegates> = $r1 in line 14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.BaseActivity: aero.panasonic.companion.view.delegate.ActivityDelegate delegate> = $r4 in line 60
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 61
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> throw $r27 in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r5.<aero.panasonic.companion.view.remotecontrol.RemoteControlActivity$remoteDPadDownKeyListener$1: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlActivity$remoteDPadDownKeyListener$1: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.remotecontrol.RemoteControlActivity$remoteDPadUpKeyListener$1: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.remotecontrol.RemoteControlActivity$remoteDPadUpKeyListener$1: void <init>(aero.panasonic.companion.view.remotecontrol.RemoteControlActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.remotecontrol.RemoteControlActivity dummyMainMethod_aero_panasonic_companion_view_remotecontrol_RemoteControlActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.news.NewsActivity dummyMainMethod_aero_panasonic_companion_view_news_NewsActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.NewsActivity dummyMainMethod_aero_panasonic_companion_view_news_NewsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.NewsActivity dummyMainMethod_aero_panasonic_companion_view_news_NewsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.NewsActivity dummyMainMethod_aero_panasonic_companion_view_news_NewsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.NewsActivity dummyMainMethod_aero_panasonic_companion_view_news_NewsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.NewsActivity dummyMainMethod_aero_panasonic_companion_view_news_NewsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.NewsActivity dummyMainMethod_aero_panasonic_companion_view_news_NewsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.NewsActivity dummyMainMethod_aero_panasonic_companion_view_news_NewsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.NewsActivity dummyMainMethod_aero_panasonic_companion_view_news_NewsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.news.NewsActivity dummyMainMethod_aero_panasonic_companion_view_news_NewsActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.favorites.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_FavoritesActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.PaymentFormActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_PaymentFormActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.detail.PaymentFormActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_detail_PaymentFormActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r0, $r1) on line 213 in method <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r13.<aero.panasonic.companion.userdata.PersistentEntityManager: void <init>(com.fasterxml.jackson.databind.ObjectMapper,android.content.Context)>(null, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.userdata.PersistentEntityManager: void <init>(com.fasterxml.jackson.databind.ObjectMapper,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 21
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<aero.panasonic.companion.model.system.ParentalControlsManager: void <init>(android.content.Context)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.model.system.ParentalControlsManager: void <init>(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r16.<aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>($r0, null, null, $r5, $r7, null, $r8, $r11, $r12, $r14, $r15, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager: android.content.Context context> = $r1 in line 116
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> = $r1 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>($r1, $r14, $r6) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0 in line 81
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<aero.panasonic.inflight.services.IInFlightCallback: void onInitServiceComplete(java.lang.Object,java.lang.String)>($r5, $r4) in line 83
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1$2: aero.panasonic.companion.connectivity.PairingManager$1 this$1> = $r1 in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>($r9) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>($r1) in line 104
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener onSeatMediaRemoteControlCommandSendError> = $r1 in line 226
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 233
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError getTimeLastUpdated> in line 103
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: aero.panasonic.companion.connectivity.PairingManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager$1$1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>($r8) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 298
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: aero.panasonic.companion.connectivity.PairingManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>($r5) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: java.lang.String TAG> in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void e(java.lang.String,java.lang.String)>($r3, "SeatPairingV1 object is not set or null.") in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void e(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(6, $r0, $r1) in line 106
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0) in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>() in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>("truncateLog: ", $r3) in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(2, $r0, $r1) in line 54
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>($i0, $r0, $r1) in line 192
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r0, $r1) in line 213
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0) on line 200 in method <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0) in line 200
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String concat(java.lang.String)>($r11) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>($r2, $r4) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(2, $r0, $r1) in line 54
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>($i0, $r0, $r1) in line 192
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>($r0, $r1) in line 213
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.FeaturedActivity dummyMainMethod_aero_panasonic_companion_view_FeaturedActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.FeaturedActivity dummyMainMethod_aero_panasonic_companion_view_FeaturedActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.pairing.PairingHelpActivity dummyMainMethod_aero_panasonic_companion_view_pairing_PairingHelpActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.PairingHelpActivity dummyMainMethod_aero_panasonic_companion_view_pairing_PairingHelpActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.PairingHelpActivity dummyMainMethod_aero_panasonic_companion_view_pairing_PairingHelpActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.PairingHelpActivity dummyMainMethod_aero_panasonic_companion_view_pairing_PairingHelpActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.PairingHelpActivity dummyMainMethod_aero_panasonic_companion_view_pairing_PairingHelpActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.PairingHelpActivity dummyMainMethod_aero_panasonic_companion_view_pairing_PairingHelpActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.PairingHelpActivity dummyMainMethod_aero_panasonic_companion_view_pairing_PairingHelpActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.PairingHelpActivity dummyMainMethod_aero_panasonic_companion_view_pairing_PairingHelpActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.PairingHelpActivity dummyMainMethod_aero_panasonic_companion_view_pairing_PairingHelpActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.PairingHelpActivity dummyMainMethod_aero_panasonic_companion_view_pairing_PairingHelpActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.appinfo.AppInfoActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_AppInfoActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.AppInfoActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_AppInfoActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.AppInfoActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_AppInfoActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.AppInfoActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_AppInfoActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.AppInfoActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_AppInfoActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.AppInfoActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_AppInfoActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.AppInfoActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_AppInfoActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.AppInfoActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_AppInfoActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.AppInfoActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_AppInfoActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.appinfo.AppInfoActivity dummyMainMethod_aero_panasonic_companion_view_appinfo_AppInfoActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.favorites.v2.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_v2_FavoritesActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.v2.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_v2_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.v2.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_v2_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.v2.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_v2_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.v2.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_v2_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.v2.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_v2_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.v2.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_v2_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.v2.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_v2_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.v2.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_v2_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.favorites.v2.FavoritesActivity dummyMainMethod_aero_panasonic_companion_view_favorites_v2_FavoritesActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke r0.<android.app.Activity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r1, $r2) on line 132 in method <aero.panasonic.companion.view.entertainment.livetv.EpgActivity: void onResumeInternal()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.livetv.EpgActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_livetv_EpgActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.livetv.EpgActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_livetv_EpgActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.livetv.EpgActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_livetv_EpgActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.livetv.EpgActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_livetv_EpgActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.livetv.EpgActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_livetv_EpgActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.livetv.EpgActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_livetv_EpgActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.livetv.EpgActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_livetv_EpgActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.livetv.EpgActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_livetv_EpgActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResumeInternal()>() in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.entertainment.livetv.EpgActivity: void onResumeInternal()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<aero.panasonic.companion.view.BaseActivity: void onResumeInternal()>() in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void onResumeInternal()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResumeInternal()>() in line 95
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResumeInternal()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void onResumeInternal()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke r0.<android.app.Activity: android.content.Intent getIntent()>() in line 97
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.entertainment.livetv.EpgActivity: android.content.Intent getIntent()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r0
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void onResumeInternal()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 105
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.entertainment.livetv.EpgActivity: void onResumeInternal()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<android.app.Activity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r1, $r2) in line 132
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.weather.WeatherActivity dummyMainMethod_aero_panasonic_companion_view_weather_WeatherActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.weather.WeatherActivity dummyMainMethod_aero_panasonic_companion_view_weather_WeatherActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.weather.WeatherActivity dummyMainMethod_aero_panasonic_companion_view_weather_WeatherActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.weather.WeatherActivity dummyMainMethod_aero_panasonic_companion_view_weather_WeatherActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.weather.WeatherActivity dummyMainMethod_aero_panasonic_companion_view_weather_WeatherActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.weather.WeatherActivity dummyMainMethod_aero_panasonic_companion_view_weather_WeatherActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreateInternal(android.os.Bundle)>($r1) in line 37
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.weather.WeatherActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke r0.<aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>($r14) in line 71
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = staticinvoke <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>(r0) in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r1.<aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>($r0) in line 10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.music.ServiceBindingDelegate: android.app.Activity activity> = $r1 in line 24
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegate: void <init>(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 24
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.music.ServiceBindingDelegateFactory: aero.panasonic.companion.view.music.ServiceBindingDelegate create(android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r1 in line 10
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1[$i0] = $r3 in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>($r1) in line 60
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r4.<aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>($r1) in line 60
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.delegate.CompositeDelegate: aero.panasonic.companion.view.delegate.ActivityDelegate[] delegates> = $r1 in line 14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.delegate.CompositeDelegate: void <init>(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.BaseActivity: aero.panasonic.companion.view.delegate.ActivityDelegate delegate> = $r4 in line 60
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.BaseActivity: void setDelegates(aero.panasonic.companion.view.delegate.ActivityDelegate[])>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 61
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.weather.WeatherActivity: void onCreateInternal(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 74
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.weather.WeatherActivity dummyMainMethod_aero_panasonic_companion_view_weather_WeatherActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.weather.WeatherActivity dummyMainMethod_aero_panasonic_companion_view_weather_WeatherActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.weather.WeatherActivity dummyMainMethod_aero_panasonic_companion_view_weather_WeatherActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.weather.WeatherActivity dummyMainMethod_aero_panasonic_companion_view_weather_WeatherActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <dummyMainClass: androidx.fragment.app.Fragment dummyMainMethod_androidx_fragment_app_Fragment(android.content.Intent,android.app.Activity)>(parameter0, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: androidx.fragment.app.Fragment dummyMainMethod_androidx_fragment_app_Fragment(android.content.Intent,android.app.Activity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> parameter0 := @parameter0: android.content.Intent
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.pairing.SeatbackPairActivity dummyMainMethod_aero_panasonic_companion_view_pairing_SeatbackPairActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.entertainment.playlist.PlaylistActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_playlist_PlaylistActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.playlist.PlaylistActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_playlist_PlaylistActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.playlist.PlaylistActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_playlist_PlaylistActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStop()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.playlist.PlaylistActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_playlist_PlaylistActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onRestart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 109
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.playlist.PlaylistActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_playlist_PlaylistActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.playlist.PlaylistActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_playlist_PlaylistActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r6.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>(r0) in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': aero.panasonic.companion.view.LifeCycleHookActivity f$0> = $r1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.'-$$Lambda$LifeCycleHookActivity$EL3j0M7wtuYlkc9bmdJwnv7yl2Q': void <init>(aero.panasonic.companion.view.LifeCycleHookActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: aero.panasonic.companion.model.network.NetworkDao$PingListener pingListener> = $r6 in line 43
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 48
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.playlist.PlaylistActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_playlist_PlaylistActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onStart()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 68
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.playlist.PlaylistActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_playlist_PlaylistActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPostCreate(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 58
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.playlist.PlaylistActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_playlist_PlaylistActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.entertainment.playlist.PlaylistActivity dummyMainMethod_aero_panasonic_companion_view_entertainment_playlist_PlaylistActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("extra:view_seeking", $z0) on line 99 in method <aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>()
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onPause()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 89
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r55.<aero.panasonic.companion.view.player.MediaPlayerActivity$14: void <init>(aero.panasonic.companion.view.player.MediaPlayerActivity)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerActivity$14: void <init>(aero.panasonic.companion.view.player.MediaPlayerActivity)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.player.MediaPlayerActivity$14
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r52.<aero.panasonic.companion.view.player.MediaPlayerSkin1: void <init>(android.content.Context,android.os.Handler,aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler,aero.panasonic.companion.view.entertainment.AudioSelectorDelegate)>($r0, null, null, $r51)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerSkin1: void <init>(android.content.Context,android.os.Handler,aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler,aero.panasonic.companion.view.entertainment.AudioSelectorDelegate)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r15 = staticinvoke <aero.panasonic.companion.util.VectorDrawableUtils: android.graphics.drawable.Drawable createVectorDrawableWithTintSelector(android.content.Context,int,int)>($r1, $i1, $i0) in line 116
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.util.VectorDrawableUtils: android.graphics.drawable.Drawable createVectorDrawableWithTintSelector(android.content.Context,int,int)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: android.content.Context
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerSkin1: void <init>(android.content.Context,android.os.Handler,aero.panasonic.companion.view.player.MediaPlayerSkin1$CloseHandler,aero.panasonic.companion.view.entertainment.AudioSelectorDelegate)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.player.MediaPlayerSkin1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r51.<aero.panasonic.companion.view.entertainment.AudioSelectorDelegate: void <init>(android.app.Activity,aero.panasonic.companion.connectivity.PairingManager)>($r0, $r50)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.entertainment.AudioSelectorDelegate: void <init>(android.app.Activity,aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.view.entertainment.AudioSelectorDelegate
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r50.<aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>($r0, null, null, $r39, $r41, null, $r42, $r45, $r46, $r48, $r49, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: android.content.Context val$context> = $r2 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>($r1, $r14, $r6) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0 in line 81
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<aero.panasonic.inflight.services.IInFlightCallback: void onInitServiceComplete(java.lang.Object,java.lang.String)>($r5, $r4) in line 83
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1$1: aero.panasonic.companion.connectivity.PairingManager$1 this$1> = $r1 in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>($r8) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>($r1) in line 298
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener onSeatMediaRemoteControlCommandSendSuccess> = $r1 in line 265
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = r0.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: aero.panasonic.inflight.services.seatpairing.onFavoritesTransferError getTimeLastUpdated> in line 297
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatMediaRemoteControllerChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatMediaRemoteControllerChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager$1
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.inflight.services.InFlight
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r1 := @parameter0: android.content.Context
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: android.content.Context val$context> = $r2 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<aero.panasonic.companion.view.player.MediaPlayerActivity: void onSaveInstanceState(android.os.Bundle)>(null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerActivity: void onSaveInstanceState(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<aero.panasonic.companion.view.player.MediaPlayerActivity: aero.panasonic.companion.view.player.MediaPlayerPresenter controlsPresenter> in line 593
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerActivity: void onSaveInstanceState(android.os.Bundle)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r2 = virtualinvoke $r3.<aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()>() in line 593
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = r0.<aero.panasonic.companion.view.player.MediaPlayerPresenter: boolean isViewSeeking> in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.player.MediaPlayerPresenter: android.os.Bundle getSaveInstanceBundle()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("extra:view_seeking", $z0) in line 99
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0) in method <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingDetailActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingDetailActivity(android.content.Intent)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.shopping.ShoppingDetailActivity dummyMainMethod_aero_panasonic_companion_view_shopping_ShoppingDetailActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r0.<androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)>(null, 0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r1) on line 219 in method <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r13.<aero.panasonic.companion.userdata.PersistentEntityManager: void <init>(com.fasterxml.jackson.databind.ObjectMapper,android.content.Context)>(null, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.userdata.PersistentEntityManager: void <init>(com.fasterxml.jackson.databind.ObjectMapper,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 21
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<aero.panasonic.companion.model.system.ParentalControlsManager: void <init>(android.content.Context)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.model.system.ParentalControlsManager: void <init>(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r16.<aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>($r0, null, null, $r5, $r7, null, $r8, $r11, $r12, $r14, $r15, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager: android.content.Context context> = $r1 in line 116
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> = $r1 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>($r1, $r14, $r6) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0 in line 81
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<aero.panasonic.inflight.services.IInFlightCallback: void onInitServiceComplete(java.lang.Object,java.lang.String)>($r5, $r4) in line 83
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<aero.panasonic.companion.connectivity.PairingManager$1$4: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 196
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$4: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 196
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager$1$3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>($r5) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: aero.panasonic.companion.connectivity.PairingManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>($r5) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: java.lang.String TAG> in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void e(java.lang.String,java.lang.String)>($r3, "SeatPairingV1 object is not set or null.") in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void e(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(6, $r0, $r1) in line 106
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>($i0, $r0, $r1) in line 192
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r1) in line 219
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0) on line 200 in method <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0) in line 200
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String concat(java.lang.String)>($r11) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>($r2, $r4) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(2, $r0, $r1) in line 54
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>($i0, $r0, $r1) in line 192
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r0, $r1) in line 219
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - The sink staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1) on line 216 in method <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)> was called with values from the following sources:
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() on line 152 in method <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r8.<android.net.wifi.WifiInfo: java.lang.String getSSID()>() in line 152
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String createHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return $r4 in line 154
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.view.LifeCycleHookActivity: java.lang.String hash> = $r1 in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void checkHash()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 131
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.view.LifeCycleHookActivity: void onResume()>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 79
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r13.<aero.panasonic.companion.userdata.PersistentEntityManager: void <init>(com.fasterxml.jackson.databind.ObjectMapper,android.content.Context)>(null, $r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.userdata.PersistentEntityManager: void <init>(com.fasterxml.jackson.databind.ObjectMapper,android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 21
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r15.<aero.panasonic.companion.model.system.ParentalControlsManager: void <init>(android.content.Context)>($r0)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.model.system.ParentalControlsManager: void <init>(android.content.Context)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 13
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <dummyMainClass: aero.panasonic.companion.view.player.MediaPlayerActivity dummyMainMethod_aero_panasonic_companion_view_player_MediaPlayerActivity(android.content.Intent)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r16.<aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>($r0, null, null, $r5, $r7, null, $r8, $r11, $r12, $r14, $r15, null)
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager: android.content.Context context> = $r1 in line 116
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r14.<aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>(r0, $r1, $r2, $r5) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> = $r1 in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void <init>(aero.panasonic.companion.connectivity.PairingManager,android.content.Context,java.util.concurrent.Executor,aero.panasonic.companion.model.media.dao.MediaDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: void <init>(android.content.Context,aero.panasonic.companion.userdata.UserDataStore,java.util.concurrent.Executor,aero.panasonic.companion.concurrent.UiExecutor,aero.panasonic.companion.configuration.AppConfiguration,aero.panasonic.companion.model.media.dao.MediaDao,aero.panasonic.inflight.services.InFlight,aero.panasonic.companion.userdata.seatclass.SeatClassManager,aero.panasonic.companion.connectivity.PairedLaunchManager,aero.panasonic.companion.model.playback.PlaybackManager,aero.panasonic.companion.model.system.ParentalControlsManager,aero.panasonic.companion.model.network.NetworkDao)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>($r1, $r14, $r6) in line 121
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $z0 = virtualinvoke $r2.<aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>($r1, $r4, "04.10.00.2", $r0) in line 78
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.InFlight: boolean checkCompatibility(android.content.Context,java.lang.String,java.lang.String,aero.panasonic.inflight.services.IInFlightCallback)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return 0 in line 81
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatPairingV1: void initService(android.content.Context,aero.panasonic.inflight.services.IInFlightCallback,aero.panasonic.inflight.services.InFlight)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> interfaceinvoke $r0.<aero.panasonic.inflight.services.IInFlightCallback: void onInitServiceComplete(java.lang.Object,java.lang.String)>($r5, $r4) in line 83
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r8.<aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$1: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 130
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r11.<aero.panasonic.companion.connectivity.PairingManager$1$4: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 196
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$4: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 196
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 196
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r6 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteMediaQueueV1 access$100(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 196
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteMediaQueueV1 access$100(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 196
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r10.<aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$3: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager$1$3
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r0 := @this: aero.panasonic.companion.connectivity.PairingManager$1$2
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>($r9) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatRemoteControllerInfoChangedListener(aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1$SeatRemoteControllerInfoChangedListener)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 104
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r0 := @parameter0: aero.panasonic.companion.connectivity.PairingManager
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> specialinvoke $r9.<aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>(r0) in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1$2: void <init>(aero.panasonic.companion.connectivity.PairingManager$1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return in line 139
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = r0.<aero.panasonic.companion.connectivity.PairingManager$1: aero.panasonic.companion.connectivity.PairingManager this$0> in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r7 = staticinvoke <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>($r4) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> r1 = $r0.<aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 remoteControl> in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager: aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1 access$200(aero.panasonic.companion.connectivity.PairingManager)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> return r1 in line 59
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.companion.connectivity.PairingManager$1: void onInitServiceComplete(java.lang.Object,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r7.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>($r5) in line 187
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = r0.<aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: java.lang.String TAG> in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.seatpairing.SeatRemoteControlV1: void setSeatPairingSessionObject(aero.panasonic.inflight.services.seatpairing.SeatPairingV1)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void e(java.lang.String,java.lang.String)>($r3, "SeatPairingV1 object is not set or null.") in line 283
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void e(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(6, $r0, $r1) in line 106
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0) in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>() in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>("truncateLog: ", $r3) in line 189
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(2, $r0, $r1) in line 54
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>($i0, $r0, $r1) in line 192
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1) in line 216
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - - $r10 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0) on line 200 in method <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	on Path: 
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r10 = interfaceinvoke $r9.<android.database.Cursor: java.lang.String getString(int)>($i0) in line 200
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> $r4 = virtualinvoke $r4.<java.lang.String: java.lang.String concat(java.lang.String)>($r11) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.data.iicore.cp.IICoreQuery: java.lang.String queryString(android.net.Uri)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>($r2, $r4) in line 202
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void v(java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>(2, $r0, $r1) in line 54
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void TestHelper(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>($i0, $r0, $r1) in line 192
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 	 -> <aero.panasonic.inflight.services.utils.Log: void setIsSeatBack(int,java.lang.String,java.lang.String)>
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - 		 -> staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r0, $r1) in line 216
[main] INFO soot.jimple.infoflow.android.SetupApplication$InPlaceInfoflow - Data flow solver took 3003 seconds. Maximum memory consumption: 5431 MB
[main] INFO soot.jimple.infoflow.android.SetupApplication - Found 36 leaks
